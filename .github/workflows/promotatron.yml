name: Lighthouse APIs Maven Release Build
on:
  workflow_call:
    inputs:
      promoter:
        type: string
        required: true
      jenkins-username:
        type: string
        required: true
      jenkins-password:
        type: string
        required: true

jobs:
  jenkins-promotatron:
    runs-on: ubuntu-latest
    steps:
      - name: Kick Jenkins Promotion Job
        run: |
          JENKINS_URL='https://tools.health.dev-developer.va.gov/jenkins'
          PROMOTATRON_JOB_PATH='job/department-of-veterans-affairs/job/health-apis-promotatron/job/master'
          REQUEST_PAYLOAD='{"parameter":[{"name":"PROMOTER", "value":"${{ inputs.promoter }}"}]}'
          RESPONSE_PAYLOAD=$(mktemp)
          trap "rm ${RESPONSE_PAYLOAD}" EXIT
          requestBuild() {
            curl --silent \
              --request POST \
              --user "${{ inputs.jenkins-username }}:${{ inputs.jenkins-password }}" \
              --output ${RESPONSE_PAYLOAD} \
              --write-out '%{http_code}' \
              --data-urlencode json="${REQUEST_PAYLOAD}" \
              --location "${JENKINS_URL}/${PROMOTATRON_JOB_PATH}/build"
          }
          # We can't really trust all responses from Jenkins.
          # Sometimes Jenkins responds with an HTML page instead of kicking off a build
          for i in {1..3}
          do
            echo "Requesting promotion (${{ inputs.promoter }}) with Jenkins (attempt ${i})"
            # An error is a terminal condition, nothing else we can do
            if ! RESPONSE_STATUS=$(requestBuild); then break; fi
            if grep -q "DOCTYPE html" ${RESPONSE_PAYLOAD}; then sleep 1; continue; fi
            break;
          done
          cat "${RESPONSE_PAYLOAD}"
          if [ "${RESPONSE_STATUS:-}" != 201 ]
          then
            echo "FAILED TO PROMOTE BUILD (${RESPONSE_STATUS:0:100})"
            exit 1
          fi
          echo "Promotion requested."
          echo "See ${JENKINS_URL}/${PROMOTATRON_JOB_PATH}"
