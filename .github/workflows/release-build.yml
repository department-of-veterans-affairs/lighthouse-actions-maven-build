name: Lighthouse APIs Maven Release Build
on:
  workflow_call:
    inputs:
      java-version:
        type: string
        required: false
        default: '17'
    secrets:
      github-username:
        required: true
      github-token:
        required: true
    outputs:
      release-version: ${{ jobs.lighthouse-maven.outputs.release-version }}
      docker-images: ${{ jobs.lighthouse-maven.outputs.docker-images }}

jobs:
  lighthouse-maven:
    name: Lighthouse Maven Build
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'Next snapshot')"
    outputs:
      release-version: ${{ steps.set_outputs.outputs.release-version }}
      docker-images: ${{ steps.set_outputs.outputs.docker-images }}
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.github-username }}
          password: ${{ secrets.github-token }}
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # The standard GITHUB_ACTOR cannot push back to a protected branch.
          # We must checkout with a god-mode user.
          token: ${{ secrets.github-token }}
      - name: Setup Java
        id: setup_java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'adopt'
          cache: 'maven'
      - name: Lighthouse maven build
        uses: department-of-veterans-affairs/lighthouse-actions-maven-build@master
        env:
          JAVA_VERSION: ${{ steps.setup_java.outputs.version }}
        with:
          github-username: ${{ secrets.github-username }}
          github-token: ${{ secrets.github-token }}
          command: release
      - name: Set outputs
        id: set_outputs
        run: |
          set -x
          echo "release-version=${RELEASE_VERSION:=unknown}" | tee --append ${GITHUB_OUTPUT}
          echo "docker-images<<EOF" >> ${GITHUB_OUTPUT}
          docker images \
            --filter reference="ghcr.io/${GITHUB_REPO}*:${RELEASE_VERSION}*" \
            --format '{{.Repository}}:{{.Tag}}' \
          | grep -v 'test' \
          | tee --append ${GITHUB_OUTPUT}
          echo "EOF" >> ${GITHUB_OUTPUT}
          set +x
